# -*- coding: utf-8 -*-
"""SVM(R).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rD-rwiBEJcZTJOkqTgcc0WFxZYywymFj
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.svm import SVR
from sklearn.metrics import mean_squared_error
from sklearn.preprocessing import StandardScaler

df=pd.read_csv("/content/Linear Regression.csv")

df.head()

x=df["X"]
y=df["Y"]

y

x_reshaped = x.values.reshape(-1, 1)  # Reshape to a 2D array

scaler = StandardScaler()
scaler.fit(x_reshaped)  # Fit the scaler to the reshaped data

scaler=StandardScaler()
scaler.fit(x_reshaped)
x_scaled = scaler.transform(x_reshaped)

x_reshaped_train, x_reshaped_test, y_train, y_test = train_test_split(x_scaled, y, test_size=0.2, random_state=42)

model=SVR(kernel='linear')
model.fit(x_reshaped_train,y_train)

y_pred=model.predict(x_reshaped_test)



mse=mean_squared_error(y_test,model.predict(x_reshaped_test))

print(mse)

accuracy=model.score(x_reshaped_test,y_test)
print(f'Accuracy: {accuracy * 100:.2f}%')

# Plotting actual vs. predicted values for training data
plt.figure(figsize=(10, 5))

plt.subplot(1, 2, 1)
plt.scatter(x_reshaped_train, y_train, color='blue', label='Actual')
plt.scatter(x_reshaped_train, y_pred, color='red', label='Predicted')
plt.plot(x_reshaped_train, y_pred_train, color='red', linewidth=2, label='Regression Line')
plt.title('Training Data')
plt.xlabel('X')
plt.ylabel('Y')
plt.legend()

# Plotting actual vs. predicted values for testing data
plt.subplot(1, 2, 2)
plt.scatter(x_reshaped_test, y_test, color='blue', label='Actual')
plt.scatter(x_reshaped_test, y_pred_test, color='red', label='Predicted')
plt.plot(x_reshaped_train, y_pred_train, color='red', linewidth=2, label='Regression Line') # Optional: Use the same line as training for consistency
plt.title('Testing Data')
plt.xlabel('X')
plt.ylabel('Y')
plt.legend()

plt.tight_layout()
plt.show()



