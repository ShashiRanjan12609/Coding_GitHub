# -*- coding: utf-8 -*-
"""GlobalCity.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FXDBN9QsNsK91OuudSg6FN9z_aORiF5E
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

df=pd.read_csv("/content/global.csv")

df.head()

df.shape

df["City"].unique()

from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
df["City"]=le.fit_transform(df["City"])

df['Country'].unique()

df['Country']=le.fit_transform(df['Country'])

df.head()

# split the dataset into two parts one is dependent another one is independent variable

x=df.drop("Population_2024",axis=1)
y=df["Population_2024"]

scaler=StandardScaler()
scaler.fit(x)
x=scaler.transform(x)

# Split the dataset into training and testing sets
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=45)

model=LinearRegression()
model.fit(x_train,y_train)

y_pred=model.predict(x_test)

mse=mean_squared_error(y_test,y_pred)
r2=r2_score(y_test,y_pred)

mse

sns.distplot(y_test-y_pred)

r2_score=r2_score(y_test,y_pred)

"""**Ridge Regression**"""

from sklearn.linear_model import Ridge
from sklearn.model_selection import GridSearchCV

ridge=Ridge()

ridge

parameters={'aplpha':[12,34,5534,2322,1234,2212,1,2,3,4,6,8,10,20,30,40,50,60,70,80,90]}

parameters={'alpha':[12,34,5534,2322,1234,2212,1,2,3,4,6,8,10,20,30,40,50,60,70,80,90]} # correct the typo aplpha to alpha
ridgecv=GridSearchCV(ridge,parameters,scoring='neg_mean_squared_error',cv=5)

ridgecv.fit(x_train,y_train)

print(ridgecv.best_params_)

print(ridgecv.best_score_)

ridgecv_pred=ridgecv.predict(x_test)

import seaborn as sns
sns.distplot(y_test-ridgecv_pred,)

r2_score(y_test,ridgecv_pred)







