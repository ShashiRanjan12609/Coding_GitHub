use [AdventureWorks2022]

select * from [HumanResources].[Department]

-- SHOW ME ALL DEPARTMENT NAME 
select Name from [HumanResources].[Department]

-- SHOW ME THE GROUPS
SELECT GROUPNAME FROM [HumanResources].[Department]

--SHOW ME ALL THE DISTINT GROUPNAME

SELECT DISTINCT GROUPNAME FROM [HumanResources].[Department]

--SHOW ME THE THE DEPARTMENT NAME WHO ARE A PART OF MANUFACTURING
SELECT NAME, GROUPNAME FROM [HumanResources].[Department]
WHERE GROUPNAME LIKE 'Manufacturing'


-- GIVE ME ALL THE EMPLOYEE TABLE 
SELECT * FROM [HumanResources].[Employee]

-- GIVE ME A LIST OF ALL EMPLOYEE WHO HAVE A ORGLEVEL=2
SELECT * FROM [HumanResources].[Employee] WHERE OrganizationLevel =2 

-- GIVE ME A LIST OF ALL EMPLOYEE WHO HAVE A ORGLEVEL=2AND 3
SELECT * FROM [HumanResources].[Employee] WHERE OrganizationLevel IN (2,3) 

-- GIVE ME LIST OF EMPLOYEE WHO HAVE A JOB TITLE AS FACILITIES MANAGER
SELECT * FROM  [HumanResources].[Employee] WHERE JOBTITLE LIKE 'FACILITIES MANAGER '


-- GIVE ME ALL EMPLOYEES WHO HAVE WORD MANAGER IN THEIR TITLE
SELECT * FROM  [HumanResources].[Employee] WHERE JOBTITLE LIKE '%Manager'

-- GIVE ME ALL JOB TITLE WHO HAVE THE WORD CONTROL IN THEIR JOBTITLE.
SELECT * FROM  [HumanResources].[Employee] WHERE JOBTITLE LIKE '%Control%'


-- GIVE ME ALL EMPLOYEE WHO ARE BORN AFTER JANUARY 12 1975.
SELECT * FROM  [HumanResources].[Employee] WHERE BirthDate > '12/1/1975'

-- GIVE ME ALL EMPLOYEE WHO ARE BORN AFTER JANUARY 1 1980.
SELECT * FROM  [HumanResources].[Employee] WHERE BirthDate > '12/1/1980'

-- GIVE ME ALL EMPLOYEESS WHO ARE BORN BETWEEN JANUARY 1 1970, 1980
SELECT * FROM   [HumanResources].[Employee] WHERE BirthDate > '12/1/1970' AND BirthDate < '12/1/1980'

-- ANOTHER METHOD TO FETCH ALL THE TALBLES
SELECT * FROM   [HumanResources].[Employee] WHERE BirthDate BETWEEN '12/1/1970' AND '12/1/1980' 


-- CALCULATED COLUMNS 
SELECT NAME FROM [Production].[Product]

SELECT NAME, LISTPRICE, LISTPRICE +10 AS ADJUSTED_LIST_PRICE FROM [Production].[Product]


-- INTO 

SELECT NAME , LISTPRICE + 10 AS ADJUSTED_LIST_PRICE INTO [Production].[Product_2] FROM [Production].[Product]

SELECT * FROM [Production].[Product_2]

SELECT NAME , LISTPRICE + 10 AS ADJUSTED_LIST_PRICE INTO #tmpname FROM [Production].[Product]

SELECT * FROM #tmpname

-- DELETE DATA FROM TABLE
DELETE FROM [Production].[Product_2] WHERE NAME LIKE 'Bearing Ball'

SELECT * FROM [Production].[Product_2]

-- UPDATE STATEMENT

UPDATE [Production].[Product_2] SET NAME = 'BLADE_NEW' WHERE NAME LIKE 'BLADE'



SELECT * FROM [Production].[Product_2]


-- WRITE SQL QUERIES TO IMPLIMENT JOINS TYPE INNER JOIN , OUTER JOIN, CROSS JOIN.

-- INNER JOIN 

CREATE TABLE MYEMPLOYEE(EMPLOYEEID INT, FIRSTNAME VARCHAR(20), LASTNAME VARCHAR(20))

INSERT INTO MYEMPLOYEE VALUES(1,'MOHAN ','KUMAR') , (2,'MITHILESH','SINGH'), (3,'ROHAN','SINGH')

SELECT * FROM  MYEMPLOYEE


CREATE TABLE MYSALARY(EMPLOYEEID INT, SALARY FLOAT)
INSERT INTO MYSALARY VALUES (1, 10000), (2, 8000),(3, 6000)

SELECT * FROM  MYEMPLOYEE
SELECT * FROM  MYSALARY


SELECT A.FIRSTNAME, A.LASTNAME , B.SALARY FROM  MYEMPLOYEE A INNER JOIN MYSALARY B  ON A.EMPLOYEEID = B.EMPLOYEEID


--LEFT OUTER JOIN
CREATE TABLE MYPHONE (
    EMPLOYEEID INT,
    PHONENUMBER BIGINT
);

INSERT INTO MYPHONE VALUES (1, 9234843512), (2, 9060107355);

SELECT * FROM  MYEMPLOYEE
SELECT * FROM MYPHONE

SELECT * FROM MYEMPLOYEE A LEFT JOIN MYPHONE B
ON A.EMPLOYEEID = B.EMPLOYEEID


-- RIGHT JOIN 

CREATE TABLE MYPARKING(EMPLOYEEID INT, PARKINGSPOT VARCHAR(20))

INSERT INTO MYPARKING VALUES (1,'A1'),(2,'A2')


SELECT * FROM MYPARKING
SELECT * FROM MYEMPLOYEE

SELECT A.PARKINGSPOT , B.FIRSTNAME, B.LASTNAME FROM MYPARKING A RIGHT JOIN MYEMPLOYEE B ON A.EMPLOYEEID = B.EMPLOYEEID


-- FULL OUTER JOIN

CREATE TABLE MYCUSTOMER ( CUSTOMERID INT, CUSTOMERNAME VARCHAR(20))
INSERT INTO MYCUSTOMER VALUES(1,'RAKESH'),(2,'JOHN')

CREATE TABLE MYORDER(ORDERNUMBER INT , ORDERNAME VARCHAR(20), CUSTOMERID INT)
INSERT INTO MYORDER VALUES (1,'SOMEORDER1',1),(2,'SOMEORDER2',2),(3,'SOMEORDER3',7),(4,'SOMEORDER4',8)


SELECT * FROM MYCUSTOMER
SELECT * FROM MYORDER

SELECT A.CUSTOMERID, A.CUSTOMERNAME, B.ORDERNUMBER, B.ORDERNAME FROM MYCUSTOMER A FULL OUTER JOIN MYORDER B ON A.CUSTOMERID= B.CUSTOMERID


-- CROSS JOIN 
SELECT * FROM MYCUSTOMER
SELECT * FROM MYSALARY

--SELECT * FROM MYCUSTOMER CROSS JOIN MYSALARY
SELECT * FROM MYCUSTOMER, MYSALARY

SELECT GETDATE()
SELECT DATEPART(yyyy, GETDATE()) AS YEARNUMBER
SELECT DATEPART(mm, GETDATE())
SELECT DATEPART(dd, GETDATE())


-- DATEADD
SELECT DATEADD(DAY, 4, GETDATE())
SELECT DATEADD(DAY,4,'7/4/2024')

SELECT TOP 10 * FROM [Production].[WorkOrder]
SELECT workOrderID,ProductID,StartDate,EndDate, DATEDIFF(DAY,StartDate,EndDate) FROM [Production].[WorkOrder]
SELECT DATEADD(DD,-(DATEPART(DAY,GETDATE())-1), GETDATE())

--MYSALARY
--AGGREGATE FUNCTIONS
SELECT * FROM MYSALARY

SELECT AVG(SALARY) FROM MYSALARY
SELECT COUNT(*) FROM MYSALARY

SELECT * FROM MYSALARY
SELECT SUM(SALARY) FROM MYSALARY


SELECT MIN(SALARY) FROM MYSALARY 
SELECT MAX(SALARY) FROM MYSALARY 

--MYORDER
SELECT * FROM MYORDER

-- CONCATE
PRINT CONCAT('String1','string2')

SELECT ORDERNUMBER, ORDERNAME,CONCAT(ORDERNAME,'  ',ORDERNAME) AS CONCATENATEDTEXT FROM MYORDER


SELECT ORDERNUMBER, ORDERNAME,CONCAT(ORDERNAME,'  ',RAND()) AS CONCATENATEDTEXT FROM MYORDER

-- LEFT 
SELECT ORDERNUMBER, ORDERNAME,LEFT(ORDERNAME,5) FROM MYORDER

-- RIGHT

SELECT ORDERNUMBER, ORDERNAME,RIGHT(ORDERNAME,5) FROM MYORDER

-- SUBSTRING 
SELECT ORDERNUMBER , ORDERNAME, SUBSTRING(ORDERNAME,2,5) FROM MYORDER

-- LOWER CASE
SELECT ORDERNUMBER , ORDERNAME, LOWER (ORDERNAME) FROM MYORDER

-- UPPER CASE

SELECT ORDERNUMBER , ORDERNAME, UPPER(ORDERNAME) FROM MYORDER

-- LENGTH
SELECT ORDERNUMBER , ORDERNAME, LEN(ORDERNAME) FROM MYORDER

-- GIVE ME QUERY FROM THAT THE FIRST LATTER IN UPPER CASE ELSE IN LOWER

SELECT ORDERNUMBER, ORDERNAME, CONCAT(UPPER(LEFT(ORDERNAME,1)), LOWER(SUBSTRING(ORDERNAME,2,LEN(ORDERNAME)))) FROM MYORDER

-- TRIM
SELECT ' SHASHI RANJAN '
SELECT LEN(' SHASHI RANJAN ')

--LTRIM
SELECT LTRIM(' SHASHI RANJAN ')

-- RTRIM
SELECT RTRIM(' SHASHI RANJAN ')

-- TRIM FROM BOTH SIDE 

SELECT LTRIM(RTRIM(' SHASHI RANJAN '))






